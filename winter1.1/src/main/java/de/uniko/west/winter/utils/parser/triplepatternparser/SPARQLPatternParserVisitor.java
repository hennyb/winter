/*

The WINTER-API is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The WINTER-API is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the WINTER-API.  If not, see <http://www.gnu.org/licenses/>.

*/

/* Generated By:JavaCC: Do not edit this line. SPARQLPatternParserVisitor.java Version 5.0 */
package de.uniko.west.winter.utils.parser.triplepatternparser;

import de.uniko.west.winter.utils.parser.triplepatternastree.ASTBlankNode;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTBlankNodePropertyList;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTCollection;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTFalse;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTIRI;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTNumericLiteral;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTObjectList;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTPropertyList;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTQName;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTQueryContainer;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTRDFLiteral;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTString;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTTriplesSameSubject;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTTrue;
import de.uniko.west.winter.utils.parser.triplepatternastree.ASTVar;
import de.uniko.west.winter.utils.parser.triplepatternastree.SimpleNode;

public interface SPARQLPatternParserVisitor
{
  public Object visit(SimpleNode node, Object data) throws VisitorException;
  public Object visit(ASTQueryContainer node, Object data) throws VisitorException;
  public Object visit(ASTTriplesSameSubject node, Object data) throws VisitorException;
  public Object visit(ASTPropertyList node, Object data) throws VisitorException;
  public Object visit(ASTVar node, Object data) throws VisitorException;
  public Object visit(ASTIRI node, Object data) throws VisitorException;
  public Object visit(ASTObjectList node, Object data) throws VisitorException;
  public Object visit(ASTCollection node, Object data) throws VisitorException;
  public Object visit(ASTBlankNodePropertyList node, Object data) throws VisitorException;
  public Object visit(ASTQName node, Object data) throws VisitorException;
  public Object visit(ASTBlankNode node, Object data) throws VisitorException;
  public Object visit(ASTRDFLiteral node, Object data) throws VisitorException;
  public Object visit(ASTNumericLiteral node, Object data) throws VisitorException;
  public Object visit(ASTTrue node, Object data) throws VisitorException;
  public Object visit(ASTFalse node, Object data) throws VisitorException;
  public Object visit(ASTString node, Object data) throws VisitorException;
}
/* JavaCC - OriginalChecksum=db7bac24229a74dfae421b7f8fce1538 (do not edit this line) */
