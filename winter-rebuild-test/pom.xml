<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.java.rdf.winter</groupId>
  <artifactId>winter-rebuild-test</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>winter-rebuild-test</name>
  <url>http://maven.apache.org</url>

  <!-- Snapshots of the current sommerbuild -->
  <dependencies>
	<dependency>
      <groupId>net.java.rdf.winter</groupId>
      <artifactId>winter-rebuild</artifactId>
      <version>1.0-SNAPSHOT</version>
	</dependency>
	<dependency>
      <groupId>net.java.rdf.winter.ant</groupId>
      <artifactId>winter-ant</artifactId>
      <version>1.0-SNAPSHOT</version>
	</dependency>

    <!-- Java modules, normally you need only the dependencys of Sommer and your special project. 
    	 To simpliefy it i use no scopes in the dependency definition, cause sometimes you need them
    	 to compile and to run your project. Cleanup will come later.-->    
    <dependency>
    	<groupId>jboss</groupId>
    	<artifactId>javassist</artifactId>
    	<version>3.7.ga</version>
    </dependency>
    <!-- slf4j over log4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.5.6</version>
    </dependency>
    <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>slf4j-log4j12</artifactId>
    	<version>1.5.6</version>
    	<!-- <scope>test</scope> -->
	</dependency>
    <!-- OpenRDF modules referenced by JFresnel -->    
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-model</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-api</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-ntriples</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-n3</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-rdfxml</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-trix</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-turtle</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-trig</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-query</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryalgebra-model</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryalgebra-evaluation</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryparser-api</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryparser-serql</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryparser-sparql</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryresultio-api</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryresultio-binary</artifactId>
      <version>2.3-pr1</version>
    </dependency> 
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-api</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-manager</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-http</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-sail</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-event</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-dataset</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-http-protocol</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-http-client</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-api</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-inferencer</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-memory</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-nativerdf</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-rdbms</artifactId>
      <version>2.3-pr1</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-runtime</artifactId>
      <version>2.3-pr1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
  </dependencies>
 <!-- Force maven to use java 1.6 --> 
  <build>
  	<plugins>
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-compiler-plugin</artifactId>
    				<configuration>
    					<source>1.6</source>
    					<target>1.6</target>
    				</configuration>
	</plugin>
<!--  -->	
<!--   	<plugin>-->
<!--    	<artifactId>maven-antrun-plugin</artifactId>-->
<!--        	<executions>-->
<!--          		<execution>          	-->
<!--            		<id>build-config-files</id>-->
<!--            		 call after compilation to enrich .class files-->
<!--            		<phase>process-classes</phase>-->
<!--            		<goals>-->
<!--              			<goal>run</goal>-->
<!--            		</goals>-->
<!--            		<configuration>-->
<!--              			<tasks>-->
<!--              				 Set the dependency-environment paths for the anttask -->
<!--              				<property name="runtime-classpath" refid="maven.runtime.classpath"/>-->
<!--              				<property name="compile-classpath" refid="maven.compile.classpath"/>-->
<!--              				<property name="basedir"		   location="${basedir}"/>-->
<!--              				 Set the paths to Sommer.jar and SommerAntTask.jar needed by the anttask -->
<!--              				<property name="sommer-dependency-jar" 			location="${maven.dependency.sommer.sommerCore.jar.path}"/>-->
<!--                			<property name="sommerAntTask-dependency-jar" 	location="${maven.dependency.sommer.SommerAntTask.jar.path}"/>-->
<!--              				 Start the anttask: here you call the task by the name corresponding to the name in your build.xml -->
<!--                			<ant target="weave" inheritRefs="true"/>-->
<!--              			</tasks> -->
<!--            		</configuration>-->
<!--          		</execution>-->
<!--        	</executions>-->
<!--      	</plugin>-->
    </plugins>
  </build>  
</project>